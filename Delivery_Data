delivery_t<- read.csv(file.choose())

summary(delivery_t)
attach(delivery_t)

plot(Sorting.Time,Delivery.Time)  ### Scatter Plot 
cor(Sorting.Time,Delivery.Time)

reg<- lm(Delivery.Time~Sorting.Time)     ##SLR Model
summary(reg)
##  R-squared:  0.6823,	Adjusted R-squared:  0.6655   ##

pred<- predict(reg)
pred

reg$residuals
sum(reg$residuals)
mean(reg$residuals)

sqrt(sum(reg$residuals^2)/nrow(delivery_t))   ## RMSE Value
sqrt(mean(reg$residuals)^2)

confint(reg,level=0.95)       ## Confidance Interval            
predict(reg,interval = 'predict')

##  gg Plot  ##
install.packages("ggplot2")
library(ggplot2)
ggplot(data = delivery_t,aes(x= Sorting.Time,y= Delivery.Time)) + 
      geom_point(colour='Blue') +
      geom_line(colour='red',data = delivery_t,aes(x= Sorting.Time,y= pred))




########  LOGARITHMIC MODEL  #######

plot(log(Sorting.Time),Delivery.Time)
cor(log(Sorting.Time),Delivery.Time)

reg_log<- lm(Delivery.Time~log(Sorting.Time))  ##SLR Log Method
summary(reg_log)
###### R-squared:  0.6954,	Adjusted R-squared:  0.6794  #######

pred_1<- predict(reg_log)

reg_log$residuals
sum(reg_log$residuals)
mean(reg_log$residuals)

sqrt(sum(reg_log$residuals^2)/nrow(delivery_t))  ###  RMSE Value

confint(reg_log,level = 0.95)
predict(reg_log,interval = 'predict')

ggplot(data = delivery_t,aes(x= Sorting.Time,y= Delivery.Time)) + 
  geom_point(colour='Blue') +
  geom_line(colour='red',data = delivery_t,aes(x= Sorting.Time,y= pred_1))



###### Exponential Method ######

plot(Sorting.Time,log(Delivery.Time))
cor(Sorting.Time,log(Delivery.Time))

reg_exp<- lm(log(Delivery.Time)~Sorting.Time)
summary(reg_exp)
## R-squared: 0.7109,	Adjusted R-squared:  0.6957  ##

pred_2<- predict(reg_exp)
pred_2
exp<- exp(pred_2)

reg_exp$residuals
sum(reg_exp$residuals)
mean(reg_exp$residuals)

sqrt(mean(reg_exp$residuals^2))

error = delivery_t$Delivery.Time - exp
error
sqrt(sum(error^2)/(nrow(delivery_t)))  ###  RMSE Value

confint(reg_exp,level = 0.95)
predict(reg_exp,interval = 'predict')

ggplot(data = delivery_t,aes(x= Sorting.Time,y= Delivery.Time)) + 
  geom_point(colour='Blue') +
  geom_line(colour='red',data = delivery_t,aes(x= Sorting.Time,y= exp))


####  Polynomial Model With 3 Degree ####

plot(Sorting.Time^3,log(Delivery.Time))
cor(Sorting.Time^3,log(Delivery.Time))

reg_poly3<- lm(log(Delivery.Time)~ Sorting.Time +I(Sorting.Time^2)
               +I(Sorting.Time^3))
summary(reg_poly3)
###   R-squared:  0.7819,	Adjusted R-squared:  0.7434  ###

pred_3<- predict(reg_poly3)
exp_1<- exp(pred_3)

reg_poly3$residuals
sum(reg_poly3$residuals)
mean(reg_poly3$residuals)

## gg plot ##
ggplot(data = delivery_t,aes(x= Sorting.Time+I(Sorting.Time^2)
                           +I(Sorting.Time^3),y = Delivery.Time))+
        geom_point(color= 'blue')+
        geom_line(data =delivery_t ,color='red',aes(x= Sorting.Time+I(Sorting.Time^2)
                                                +I(Sorting.Time^3),y = exp_1))

